{"version":3,"sources":["components/context.js","components/Navbar.js","components/Alert.js","components/Form.js","components/Item.js","components/Items.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","getLocalData","localStorage","getItem","JSON","parse","AppProvider","children","useState","list","setList","filterList","setFilterList","name","setName","radioValue","setRadioValue","isEdit","setIsEdit","editId","setEditId","sign","message","alert","setAlert","useEffect","setItem","stringify","Provider","value","handleInputText","e","target","toUpperCase","handleSelectChange","console","log","filter","item","completed","handleChange","event","handleSubmit","preventDefault","find","map","id","Math","random","handleEdit","handleCheck","handleDelete","handleClear","useGlobalContext","useContext","Navbar","scrollValue","setScrollValue","useRef","current","style","boxShadow","window","addEventListener","scrollY","ref","className","onChange","disabled","length","Alert","timer","setTimeout","clearTimeout","Form","type","placeholder","checked","onClick","Item","opacity","textDecoration","Items","Fragment","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.114eb5cb.chunk.js","sourcesContent":["import React ,{ useContext, useEffect, useState } from \"react\"\r\nconst AppContext = React.createContext()\r\n\r\n//retrieving data from localStorage\r\nconst getLocalData = ()=>{\r\n    if(localStorage.getItem(\"todo\") !== null)\r\n    {\r\n        return JSON.parse(localStorage.getItem(\"todo\"))\r\n    }\r\n    else\r\n    {\r\n        return []\r\n    }\r\n}\r\nconst AppProvider = ({children})=>{\r\n    const [list,setList] = useState(getLocalData())//primary list\r\n    const [filterList,setFilterList] = useState(getLocalData())\r\n    //to show filtered list without making chnages from primary list\r\n    const [name,setName] = useState(\"\")\r\n    const [radioValue,setRadioValue] = useState(\"\")\r\n    const [isEdit,setIsEdit] = useState(false)\r\n    const [editId,setEditId] = useState(null)\r\n    const [alert,setAlert] = useState({sign:\"\",message:\"\"})\r\n\r\n    //if there is list present in localStorage, than we have to store that in setFilterList other wise it would be empty\r\n    useEffect(()=>{\r\n        setFilterList(list)\r\n    },[list])\r\n\r\n    //Radio\r\n    const handleChange = (event)=>{\r\n        setRadioValue(event.target.value)\r\n    }\r\n\r\n    const handleInputText = (e)=>{\r\n        setName(e.target.value.toUpperCase())\r\n    }\r\n    //Submit\r\n    const handleSubmit = (event)=>{\r\n        event.preventDefault()\r\n        if(filterList.find((item)=>item.name == name))\r\n        {\r\n            setAlert({sign:\"danger\",message:\"item already exist in an list\"})\r\n        }\r\n        else\r\n        {\r\n            if(name !== \"\" && radioValue !== \"\" && alert.message === \"\")\r\n            {\r\n                if(isEdit)\r\n                {\r\n                    //submit after edit\r\n                    setList(list.map((item)=>{\r\n                        if(item.id === editId)\r\n                        {\r\n                            console.log(\"connected\")\r\n                            return {\"name\":name,id:item.id,value:radioValue,completed:item.completed}\r\n                        }\r\n                        return item;\r\n                    }))\r\n                    setRadioValue(\"\")\r\n                    setName(\"\")\r\n                    setIsEdit(false)\r\n                    setEditId(null)\r\n                    setAlert({sign:\"success\",message:\"one item is edited successfully\"})\r\n                }\r\n                else\r\n                {\r\n                    setRadioValue(\"\")\r\n                    setName(\"\")\r\n                    setList([...list,{name:name,id:Math.random()*100,value:radioValue,completed:false}])\r\n                    setAlert({sign:\"success\",message:\"one item is added to the List\"})\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setAlert({sign:\"danger\",message:\"please fill all the required fields\"})\r\n            }\r\n        }\r\n    }\r\n\r\n    //to show the chcked todo\r\n    const handleCheck = (id)=>{\r\n        setList(list.map((item)=>{\r\n            if(item.id === id)\r\n            {\r\n                return {name:item.name,id:item.id,value:item.value,completed:!item.completed}\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    //Delete\r\n    const handleDelete = (id)=>{\r\n       setList(list.filter(item => item.id !== id))\r\n       setAlert({sign:\"danger\",message:\"one item is deleted from the List\"})\r\n    }\r\n\r\n    //Edit\r\n    const handleEdit = (id)=>{\r\n        setIsEdit(true)\r\n        setEditId(id)\r\n        setList(list.map((item)=>{\r\n            if(item.id === id)\r\n            {\r\n                setName(item.name)\r\n                setRadioValue(item.value)\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    //Clear\r\n    const handleClear = ()=>{\r\n        setList([])\r\n        setAlert({sign:\"danger\",message:\"All item is remover from the List\"})\r\n    }\r\n\r\n    //Filteration from select\r\n    const handleSelectChange = (e)=>{\r\n        console.log(e.target.value)\r\n        switch(e.target.value)\r\n        {\r\n            case \"all_checked_unchecked\":\r\n                setFilterList(list)\r\n                break;\r\n            case \"checked\":\r\n                setFilterList(list.filter(item=>item.completed === true))\r\n                 break;\r\n            case \"unchecked\":\r\n                setFilterList(list.filter(item=>item.completed !== true))\r\n                 break;\r\n            case \"all_high_low\":\r\n                setFilterList(list)\r\n                 break;\r\n            case \"high\":\r\n                setFilterList(list.filter(item=>item.value === \"high\"))\r\n                 break;\r\n            case \"low\":\r\n                setFilterList(list.filter(item=>item.value === \"low\"))\r\n                 break;\r\n            default:\r\n                setFilterList(list)\r\n                 break;\r\n        }\r\n    }\r\n\r\n    //save the changes in localStorage\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"todo\",JSON.stringify(filterList))\r\n    },[filterList])\r\n   return (\r\n       <AppContext.Provider value = {{\r\n           list,\r\n           setList,\r\n           filterList,\r\n           name,\r\n           setName,\r\n           handleInputText,\r\n           handleSelectChange,\r\n           handleChange,\r\n           handleSubmit,\r\n           handleEdit,\r\n           handleCheck,\r\n           handleDelete,\r\n           handleClear,\r\n           radioValue,\r\n           isEdit,\r\n           alert,\r\n           setAlert\r\n           }}>\r\n          {children}\r\n       </AppContext.Provider>\r\n   )\r\n}\r\n\r\nconst useGlobalContext = ()=>{\r\n    return useContext(AppContext)\r\n}\r\n\r\nexport { AppProvider, useGlobalContext };","import React, { useRef,useState, useEffect } from \"react\"\r\nimport { useGlobalContext } from \"./context\"\r\nconst Navbar = ()=>{\r\n    const {list,handleSelectChange,filterList} = useGlobalContext()\r\n    const [scrollValue,setScrollValue] = useState(0)\r\n    const value = useRef(0)\r\n    const showScrollResult = ()=>{\r\n        setScrollValue(window.scrollY)\r\n    } \r\n    useEffect(()=>{\r\n        if(scrollValue > 70)\r\n        {\r\n            value.current.style.boxShadow = \"2px 2px 5px grey\"\r\n        }\r\n        else\r\n        {\r\n           \r\n            value.current.style.boxShadow = \"\"\r\n        }\r\n    },[scrollValue])\r\n    window.addEventListener(\"scroll\",showScrollResult)\r\n\r\n    return (\r\n       <header ref = {value}>\r\n           <h1>Priority Todo</h1>\r\n           <article>\r\n               <div className = \"check\">\r\n                   <select  onChange = {handleSelectChange} disabled = {list.length > 0 ? false : true}>\r\n                       <option value = \"all_checked_unchecked\">All</option>\r\n                       <option value = \"checked\">Checked</option>\r\n                       <option value = \"unchecked\">UnChecked</option>\r\n                   </select>\r\n               </div>\r\n               <div className = \"priority\">\r\n                   <select onChange = {handleSelectChange} disabled = {list.length > 0 ? false : true}>\r\n                       <option value = \"all_high_low\">All</option>\r\n                       <option value = \"high\">High Priority</option>\r\n                       <option value = \"low\">Low Priority</option>\r\n                   </select>\r\n               </div>\r\n           </article>\r\n       </header>\r\n    )\r\n}\r\nexport default Navbar;","import React, { useEffect } from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\nconst Alert = ()=>{\r\n    const {filterList,alert,setAlert} = useGlobalContext()\r\n    useEffect(()=>{\r\n        let timer;\r\n        timer = setTimeout(()=>{\r\n            console.log(\"hello\")\r\n            setAlert({sign:\"\",message:\"\"})\r\n        },3000)\r\n        return ()=>clearTimeout(timer)\r\n    },[filterList,alert.message])\r\n\r\n    //added alert becuase when you try to submit a form without filling all the required field we change the alert stateValue and filterList is not changed at that time so therefore.\r\n    \r\n    return (\r\n        <div className = \"alert-container\">\r\n            <p className = {alert.sign}>{alert.message}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Alert;","import React from \"react\"\r\nimport {useGlobalContext} from \"./context\"\r\nimport {FaPlus} from \"react-icons/fa\"\r\nimport { FaEdit } from \"react-icons/fa\"\r\nconst Form = ()=>{\r\n    const {name,isEdit,radioValue,handleChange,handleSubmit,handleInputText} = useGlobalContext()\r\n    return (\r\n        <section className = \"form-container\">\r\n            <div className = \"div-form\">\r\n                <form>\r\n                    <input type = \"text\" placeholder = \"eg. milk\" value = {name.toUpperCase()} onChange = {handleInputText}/>\r\n                    <div className = \"radio-container\">\r\n                        <label className = \"high-radio\">\r\n                            High Priority\r\n                            <input \r\n                            type = \"radio\" \r\n                            name = \"radio\" \r\n                            value = \"high\"\r\n                            onChange = {handleChange}\r\n                            checked = {radioValue === \"high\"}/>\r\n                        </label>\r\n                        <label className = \"low-radio\">\r\n                            Low Priority\r\n                            <input \r\n                            type = \"radio\" \r\n                            name = \"radio\"\r\n                            value = \"low\" \r\n                            onChange = {handleChange}\r\n                            checked = {radioValue === \"low\"}/>\r\n                        </label>\r\n                    </div>\r\n                    <button type = \"submit\" onClick = {handleSubmit}>{isEdit ? <FaEdit/> : <FaPlus/>}</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default Form","import React from \"react\"\r\nimport { FaEdit ,FaTrashAlt, FaCheck , FaStar} from \"react-icons/fa\"\r\nimport { useGlobalContext } from \"./context\"\r\nconst Item = ({name,id,value,completed})=>{\r\n    const {handleCheck,handleDelete,handleEdit,isEdit} = useGlobalContext()\r\n    return (\r\n        <article className = \"item-container\" key = {id}>\r\n            <div className = \"name-container\">\r\n                <h1 style = {{opacity: completed ? \"0.5\" : \"1\",textDecoration : completed ? \"line-through\" : \"\"}}>{name.toUpperCase()}</h1>\r\n            </div>\r\n            <div className = \"btn-container\">\r\n                <button \r\n                style = {{opacity : isEdit ? \"0.3\" : \"1\"}}  \r\n                onClick = {()=>handleCheck(id)} \r\n                disabled = {isEdit ? true : false}><FaCheck/></button>\r\n                <button \r\n                style = {{opacity : isEdit ? \"0.3\" : \"1\"}} \r\n                onClick = {()=>handleEdit(id)} \r\n                disabled = {isEdit ? true : false}><FaEdit/></button>\r\n                <button \r\n                style = {{opacity : isEdit ? \"0.3\" : \"1\"}}\r\n                onClick = {()=>handleDelete(id)} \r\n                disabled = {isEdit ? true : false}><FaTrashAlt/></button>\r\n                <p>{value === \"high\" ? <FaStar/> : <FaStar className = \"non-priority\"/>}</p>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\nexport default Item;","import React from \"react\";\r\nimport Item from \"./Item\"\r\nimport { useGlobalContext } from \"./context\"\r\nconst Items = ()=>{\r\n    const {filterList,handleClear,isEdit} = useGlobalContext()\r\n    return (\r\n        <React.Fragment>\r\n            <section className = \"items-container\">\r\n                {filterList.map((item)=><Item key = {item.id} {...item}/>)}\r\n            </section>\r\n            <button \r\n            style = {{opacity: isEdit ? \"0.3\" : \"1\"}} \r\n            className = \"clear\" \r\n            onClick = {handleClear} \r\n            disabled = {isEdit ? true : false}>Clear List</button>\r\n        </React.Fragment>\r\n    )   \r\n}\r\nexport default Items;","import React from \"react\"\nimport Navbar from \"./components/Navbar\"\nimport Alert from \"./components/Alert\"\nimport Form from \"./components/Form\"\nimport Items from \"./components/Items\"\nimport \"./App.css\"\nconst App = ()=>{\n  return (\n   <main>\n      <Navbar/>\n      <section className = \"container\">\n        <Alert/>\n        <Form/>\n        <Items/>\n      </section>\n   </main>\n  )\n}\nexport default  App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProvider } from \"./components/context\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n    <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}